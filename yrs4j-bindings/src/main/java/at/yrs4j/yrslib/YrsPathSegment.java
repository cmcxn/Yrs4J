package at.yrs4j.yrslib;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libyrs.h:498</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class YrsPathSegment extends Structure {
	/**
	 * Tag used to identify which case current segment is referring to:
<br>
	 * <br>
	 * 1. `Y_EVENT_PATH_KEY` means that segment value can be accessed by `segment.value.key` and is
<br>
	 * referring to a string key used by map component (eg. `YMap` entry).
<br>
	 * 2. `Y_EVENT_PATH_INDEX` means that segment value can be accessed by `segment.value.index`
<br>
	 * and is referring to an int index used by sequence component (eg. `YArray` item or
<br>
	 * `YXmlElement` child).
	 */
	public byte tag;
	/**
	 * Union field containing either `key` or `index`. A particular case can be recognized by using
<br>
	 * segment's `tag` field.<br>
	 * C type : YrsPathSegmentCase
	 */
	public YrsPathSegmentCase value;
	public YrsPathSegment() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("tag", "value");
	}
	/**
	 * @param tag Tag used to identify which case current segment is referring to:
<br>
	 * <br>
	 * 1. `Y_EVENT_PATH_KEY` means that segment value can be accessed by `segment.value.key` and is
<br>
	 * referring to a string key used by map component (eg. `YMap` entry).
<br>
	 * 2. `Y_EVENT_PATH_INDEX` means that segment value can be accessed by `segment.value.index`
<br>
	 * and is referring to an int index used by sequence component (eg. `YArray` item or
<br>
	 * `YXmlElement` child).<br>
	 * @param value Union field containing either `key` or `index`. A particular case can be recognized by using
<br>
	 * segment's `tag` field.<br>
	 * C type : YrsPathSegmentCase
	 */
	public YrsPathSegment(byte tag, YrsPathSegmentCase value) {
		super();
		this.tag = tag;
		this.value = value;
	}
	public static class ByReference extends YrsPathSegment implements Structure.ByReference {
		
	}

	public static class ByValue extends YrsPathSegment implements Structure.ByValue {
		
	}
}
