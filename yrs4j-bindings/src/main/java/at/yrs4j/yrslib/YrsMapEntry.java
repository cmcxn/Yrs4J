package at.yrs4j.yrslib;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libyrs.h:204</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class YrsMapEntry extends Structure {
	/**
	 * Null-terminated string representing an entry's key component. Encoded as UTF-8.<br>
	 * C type : const char*
	 */
	public Pointer key;
	/**
	 * A `YrsOutput` value representing containing variadic content that can be stored withing map's
<br>
	 * entry.<br>
	 * C type : YrsOutput
	 */
	public YrsOutput value;
	public YrsMapEntry() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("key", "value");
	}
	/**
	 * @param key Null-terminated string representing an entry's key component. Encoded as UTF-8.<br>
	 * C type : const char*<br>
	 * @param value A `YrsOutput` value representing containing variadic content that can be stored withing map's
<br>
	 * entry.<br>
	 * C type : YrsOutput
	 */
	public YrsMapEntry(Pointer key, YrsOutput value) {
		super();
		this.key = key;
		this.value = value;
	}
	public static class ByReference extends YrsMapEntry implements Structure.ByReference {
		
	}

	public static class ByValue extends YrsMapEntry implements Structure.ByValue {
		
	}
}
