package at.yrs4j.yrslib;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libyrs.h:388</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class YrsChunk extends Structure {
	/**
	 * Piece of YText formatted using the same `fmt` rules. It can be a string, embedded object
<br>
	 * or another y-type.<br>
	 * C type : YrsOutput
	 */
	public YrsOutput data;
	/** Number of formatting attributes attached to current chunk of text. */
	public int fmt_len;
	/**
	 * The formatting attributes attached to the current chunk of text.<br>
	 * C type : YrsMapEntry*
	 */
	public YrsMapEntry.ByReference fmt;
	public YrsChunk() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("data", "fmt_len", "fmt");
	}
	/**
	 * @param data Piece of YText formatted using the same `fmt` rules. It can be a string, embedded object
<br>
	 * or another y-type.<br>
	 * C type : YrsOutput<br>
	 * @param fmt_len Number of formatting attributes attached to current chunk of text.<br>
	 * @param fmt The formatting attributes attached to the current chunk of text.<br>
	 * C type : YrsMapEntry*
	 */
	public YrsChunk(YrsOutput data, int fmt_len, YrsMapEntry.ByReference fmt) {
		super();
		this.data = data;
		this.fmt_len = fmt_len;
		this.fmt = fmt;
	}
	public static class ByReference extends YrsChunk implements Structure.ByReference {
		
	}

	public static class ByValue extends YrsChunk implements Structure.ByValue {
		
	}
}
