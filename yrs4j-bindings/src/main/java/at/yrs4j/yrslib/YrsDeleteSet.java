package at.yrs4j.yrslib;

import com.sun.jna.Structure;
import com.sun.jna.ptr.LongByReference;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libyrs.h:277</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class YrsDeleteSet extends Structure {
	/** Number of client identifier entries. */
	public int entries_count;
	/**
	 * Array of unique client identifiers (length is given in `entries_count` field). Each client
<br>
	 * ID has corresponding sequence of ranges attached, which can be found in `ranges` field under
<br>
	 * the same index.<br>
	 * C type : uint64_t*
	 */
	public LongByReference client_ids;
	/**
	 * Array of range sequences (length is given in `entries_count` field). Each sequence has
<br>
	 * a corresponding client ID attached, which can be found in `client_ids` field under
<br>
	 * the same index.<br>
	 * C type : YrsdRangeSeq*
	 */
	public YrsdRangeSeq.ByReference ranges;
	public YrsDeleteSet() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("entries_count", "client_ids", "ranges");
	}
	/**
	 * @param entries_count Number of client identifier entries.<br>
	 * @param client_ids Array of unique client identifiers (length is given in `entries_count` field). Each client
<br>
	 * ID has corresponding sequence of ranges attached, which can be found in `ranges` field under
<br>
	 * the same index.<br>
	 * C type : uint64_t*<br>
	 * @param ranges Array of range sequences (length is given in `entries_count` field). Each sequence has
<br>
	 * a corresponding client ID attached, which can be found in `client_ids` field under
<br>
	 * the same index.<br>
	 * C type : YrsdRangeSeq*
	 */
	public YrsDeleteSet(int entries_count, LongByReference client_ids, YrsdRangeSeq.ByReference ranges) {
		super();
		this.entries_count = entries_count;
		this.client_ids = client_ids;
		this.ranges = ranges;
	}
	public static class ByReference extends YrsDeleteSet implements Structure.ByReference {
		
	}

	public static class ByValue extends YrsDeleteSet implements Structure.ByValue {
		
	}
}
